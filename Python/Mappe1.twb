<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='final_df' inline='true' name='federated.1tyzfez03rr6ny18flnqt1rtwrb9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final_df' name='textscan.0vq0c2o00ymak5136pztp0rpjoal'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/katha/OneDrive/Dokumente/Ironhack/Course/Final_Project_Vegan-Food-Recommender_Clustering/Python/final_df.csv' dataRefreshTime='' directory='C:/Users/katha/OneDrive/Dokumente/Ironhack/Course/Final_Project_Vegan-Food-Recommender_Clustering/Python' filename='C:/Users/katha/AppData/Local/Temp/TableauTemp/1k319570lceeft10cqxi50i8blo8/final_df.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Deutschland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='df_comma' inline='true' name='federated.0zyil5f0zhh3i817cxybk09lgdvm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_comma' name='textscan.0aswzq71b9wzjt1ebl0nc01vsnfg'>
            <connection class='textscan' directory='C:/Users/katha/OneDrive/Dokumente/Ironhack/Course/Final_Project_Vegan-Food-Recommender_Clustering/Python' filename='df_comma.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0aswzq71b9wzjt1ebl0nc01vsnfg' name='df_comma.csv' table='[df_comma#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='string' name='product' ordinal='2' />
            <column datatype='string' name='brand' ordinal='3' />
            <column datatype='real' name='price' ordinal='4' />
            <column datatype='real' name='weight' ordinal='5' />
            <column datatype='real' name='kj' ordinal='6' />
            <column datatype='real' name='kcal' ordinal='7' />
            <column datatype='real' name='fat' ordinal='8' />
            <column datatype='real' name='sat_fat' ordinal='9' />
            <column datatype='real' name='carbs' ordinal='10' />
            <column datatype='real' name='sugar' ordinal='11' />
            <column datatype='string' name='fibre' ordinal='12' />
            <column datatype='real' name='protein' ordinal='13' />
            <column datatype='string' name='salt' ordinal='14' />
            <column datatype='string' name='product_link' ordinal='15' />
            <column datatype='string' name='photo_link' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0aswzq71b9wzjt1ebl0nc01vsnfg' name='df_comma.csv' table='[df_comma#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='string' name='product' ordinal='2' />
            <column datatype='string' name='brand' ordinal='3' />
            <column datatype='real' name='price' ordinal='4' />
            <column datatype='real' name='weight' ordinal='5' />
            <column datatype='real' name='kj' ordinal='6' />
            <column datatype='real' name='kcal' ordinal='7' />
            <column datatype='real' name='fat' ordinal='8' />
            <column datatype='real' name='sat_fat' ordinal='9' />
            <column datatype='real' name='carbs' ordinal='10' />
            <column datatype='real' name='sugar' ordinal='11' />
            <column datatype='string' name='fibre' ordinal='12' />
            <column datatype='real' name='protein' ordinal='13' />
            <column datatype='string' name='salt' ordinal='14' />
            <column datatype='string' name='product_link' ordinal='15' />
            <column datatype='string' name='photo_link' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;de&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;de_DE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>product</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kj</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kj]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>kj</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kcal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kcal]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>kcal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>fat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sat_fat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sat_fat]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>sat_fat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carbs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carbs]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>carbs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sugar]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>sugar</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fibre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fibre]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>fibre</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>protein</remote-name>
            <remote-type>5</remote-type>
            <local-name>[protein]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>protein</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[salt]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>salt</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_link]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>product_link</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>photo_link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[photo_link]</local-name>
            <parent-name>[df_comma.csv]</parent-name>
            <remote-alias>photo_link</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDE_RDE' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_comma.csv_0582B93583B44B32A82EC738FDD06302]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='df_comma.csv' datatype='table' name='[__tableau_internal_object_id__].[df_comma.csv_0582B93583B44B32A82EC738FDD06302]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_comma.csv' id='df_comma.csv_0582B93583B44B32A82EC738FDD06302'>
            <properties context=''>
              <relation connection='textscan.0aswzq71b9wzjt1ebl0nc01vsnfg' name='df_comma.csv' table='[df_comma#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='de_DE' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='string' name='product' ordinal='2' />
                  <column datatype='string' name='brand' ordinal='3' />
                  <column datatype='real' name='price' ordinal='4' />
                  <column datatype='real' name='weight' ordinal='5' />
                  <column datatype='real' name='kj' ordinal='6' />
                  <column datatype='real' name='kcal' ordinal='7' />
                  <column datatype='real' name='fat' ordinal='8' />
                  <column datatype='real' name='sat_fat' ordinal='9' />
                  <column datatype='real' name='carbs' ordinal='10' />
                  <column datatype='real' name='sugar' ordinal='11' />
                  <column datatype='string' name='fibre' ordinal='12' />
                  <column datatype='real' name='protein' ordinal='13' />
                  <column datatype='string' name='salt' ordinal='14' />
                  <column datatype='string' name='product_link' ordinal='15' />
                  <column datatype='string' name='photo_link' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Blatt 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_comma' name='federated.0zyil5f0zhh3i817cxybk09lgdvm' />
          </datasources>
          <datasource-dependencies datasource='federated.0zyil5f0zhh3i817cxybk09lgdvm'>
            <column datatype='real' name='[kcal]' role='measure' type='quantitative' />
            <column-instance column='[kcal]' derivation='None' name='[none:kcal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product]' derivation='None' name='[none:product:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[price]' role='measure' type='quantitative' />
            <column datatype='string' name='[product]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:product:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:price:qk]</rows>
        <cols>[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:kcal:qk]</cols>
      </table>
      <simple-id uuid='{2574F3B4-B1F3-47D6-BE1A-A05C5BA40F36}' />
    </worksheet>
    <worksheet name='Blatt 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_comma' name='federated.0zyil5f0zhh3i817cxybk09lgdvm' />
          </datasources>
          <datasource-dependencies datasource='federated.0zyil5f0zhh3i817cxybk09lgdvm'>
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='None' name='[none:weight:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[price]' role='measure' type='quantitative' />
            <column datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:weight:qk]</rows>
        <cols>[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:price:qk]</cols>
      </table>
      <simple-id uuid='{6010CE36-950A-440D-9D94-8FCE589E2097}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Blatt 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zyil5f0zhh3i817cxybk09lgdvm].[none:product:nk]</field>
            <field>[federated.1tyzfez03rr6ny18flnqt1rtwrb9].[none:brand:nk]</field>
            <field>[federated.1tyzfez03rr6ny18flnqt1rtwrb9].[none:kcal:nk]</field>
            <field>[federated.1tyzfez03rr6ny18flnqt1rtwrb9].[none:price:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27AB5CF5-3830-49DB-B7B4-8AB1E04BB28C}' />
    </window>
    <window class='worksheet' maximized='true' name='Blatt 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4E158F0B-C20E-4511-BD87-34DF984962B0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Blatt 1' width='192'>
      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
      NP8fK7aPFesXAQgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Blatt 2' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
